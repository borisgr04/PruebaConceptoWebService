//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PruebaConceptoWebService.WsPse {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CLSTransaction", Namespace="http://schemas.datacontract.org/2004/07/WCFDatos")]
    [System.SerializableAttribute()]
    public partial class CLSTransaction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EntityValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MunicipalityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MunicipalityValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PayValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RutaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TickedIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityCode {
            get {
                return this.EntityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityCodeField, value) != true)) {
                    this.EntityCodeField = value;
                    this.RaisePropertyChanged("EntityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EntityValue {
            get {
                return this.EntityValueField;
            }
            set {
                if ((this.EntityValueField.Equals(value) != true)) {
                    this.EntityValueField = value;
                    this.RaisePropertyChanged("EntityValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdProcess {
            get {
                return this.IdProcessField;
            }
            set {
                if ((this.IdProcessField.Equals(value) != true)) {
                    this.IdProcessField = value;
                    this.RaisePropertyChanged("IdProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MunicipalityCode {
            get {
                return this.MunicipalityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MunicipalityCodeField, value) != true)) {
                    this.MunicipalityCodeField = value;
                    this.RaisePropertyChanged("MunicipalityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MunicipalityValue {
            get {
                return this.MunicipalityValueField;
            }
            set {
                if ((this.MunicipalityValueField.Equals(value) != true)) {
                    this.MunicipalityValueField = value;
                    this.RaisePropertyChanged("MunicipalityValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PayValue {
            get {
                return this.PayValueField;
            }
            set {
                if ((this.PayValueField.Equals(value) != true)) {
                    this.PayValueField = value;
                    this.RaisePropertyChanged("PayValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ruta {
            get {
                return this.RutaField;
            }
            set {
                if ((object.ReferenceEquals(this.RutaField, value) != true)) {
                    this.RutaField = value;
                    this.RaisePropertyChanged("Ruta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TickedID {
            get {
                return this.TickedIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TickedIDField, value) != true)) {
                    this.TickedIDField = value;
                    this.RaisePropertyChanged("TickedID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CLSTaxPaers", Namespace="http://schemas.datacontract.org/2004/07/WCFDatos")]
    [System.SerializableAttribute()]
    public partial class CLSTaxPaers : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Document {
            get {
                return this.DocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentField, value) != true)) {
                    this.DocumentField = value;
                    this.RaisePropertyChanged("Document");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionInformation", Namespace="http://schemas.datacontract.org/2004/07/WCFDatos")]
    [System.SerializableAttribute()]
    public partial class TransactionInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BankResponseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodbankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TransactionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string transactionCycleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BankResponseDate {
            get {
                return this.BankResponseDateField;
            }
            set {
                if ((this.BankResponseDateField.Equals(value) != true)) {
                    this.BankResponseDateField = value;
                    this.RaisePropertyChanged("BankResponseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodService {
            get {
                return this.CodServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.CodServiceField, value) != true)) {
                    this.CodServiceField = value;
                    this.RaisePropertyChanged("CodService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Codbank {
            get {
                return this.CodbankField;
            }
            set {
                if ((object.ReferenceEquals(this.CodbankField, value) != true)) {
                    this.CodbankField = value;
                    this.RaisePropertyChanged("Codbank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Document {
            get {
                return this.DocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentField, value) != true)) {
                    this.DocumentField = value;
                    this.RaisePropertyChanged("Document");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TransactionDate {
            get {
                return this.TransactionDateField;
            }
            set {
                if ((this.TransactionDateField.Equals(value) != true)) {
                    this.TransactionDateField = value;
                    this.RaisePropertyChanged("TransactionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionState {
            get {
                return this.TransactionStateField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionStateField, value) != true)) {
                    this.TransactionStateField = value;
                    this.RaisePropertyChanged("TransactionState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cus {
            get {
                return this.cusField;
            }
            set {
                if ((object.ReferenceEquals(this.cusField, value) != true)) {
                    this.cusField = value;
                    this.RaisePropertyChanged("cus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string transactionCycle {
            get {
                return this.transactionCycleField;
            }
            set {
                if ((object.ReferenceEquals(this.transactionCycleField, value) != true)) {
                    this.transactionCycleField = value;
                    this.RaisePropertyChanged("transactionCycle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsPse.IGetDatos")]
    public interface IGetDatos {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetDatos/InsertTransaction", ReplyAction="http://tempuri.org/IGetDatos/InsertTransactionResponse")]
        string InsertTransaction(PruebaConceptoWebService.WsPse.CLSTransaction Transaction, PruebaConceptoWebService.WsPse.CLSTaxPaers TaxPaers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetDatos/InsertTransaction", ReplyAction="http://tempuri.org/IGetDatos/InsertTransactionResponse")]
        System.Threading.Tasks.Task<string> InsertTransactionAsync(PruebaConceptoWebService.WsPse.CLSTransaction Transaction, PruebaConceptoWebService.WsPse.CLSTaxPaers TaxPaers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetDatos/InsertTransactionJson", ReplyAction="http://tempuri.org/IGetDatos/InsertTransactionJsonResponse")]
        string InsertTransactionJson(string Transaction, string TaxPaers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetDatos/InsertTransactionJson", ReplyAction="http://tempuri.org/IGetDatos/InsertTransactionJsonResponse")]
        System.Threading.Tasks.Task<string> InsertTransactionJsonAsync(string Transaction, string TaxPaers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetDatos/InsertTransactionMultiCredit", ReplyAction="http://tempuri.org/IGetDatos/InsertTransactionMultiCreditResponse")]
        string InsertTransactionMultiCredit(string Transaction, string TaxPaers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetDatos/InsertTransactionMultiCredit", ReplyAction="http://tempuri.org/IGetDatos/InsertTransactionMultiCreditResponse")]
        System.Threading.Tasks.Task<string> InsertTransactionMultiCreditAsync(string Transaction, string TaxPaers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetDatos/StateTickedID", ReplyAction="http://tempuri.org/IGetDatos/StateTickedIDResponse")]
        string StateTickedID(string TickedID, int IdProcess, string MunicipalityCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetDatos/StateTickedID", ReplyAction="http://tempuri.org/IGetDatos/StateTickedIDResponse")]
        System.Threading.Tasks.Task<string> StateTickedIDAsync(string TickedID, int IdProcess, string MunicipalityCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetDatos/GetTransactionInformation", ReplyAction="http://tempuri.org/IGetDatos/GetTransactionInformationResponse")]
        PruebaConceptoWebService.WsPse.TransactionInformation GetTransactionInformation(string TickedID, int IdProcess, string MunicipalityCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetDatos/GetTransactionInformation", ReplyAction="http://tempuri.org/IGetDatos/GetTransactionInformationResponse")]
        System.Threading.Tasks.Task<PruebaConceptoWebService.WsPse.TransactionInformation> GetTransactionInformationAsync(string TickedID, int IdProcess, string MunicipalityCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGetDatosChannel : PruebaConceptoWebService.WsPse.IGetDatos, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDatosClient : System.ServiceModel.ClientBase<PruebaConceptoWebService.WsPse.IGetDatos>, PruebaConceptoWebService.WsPse.IGetDatos {
        
        public GetDatosClient() {
        }
        
        public GetDatosClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GetDatosClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetDatosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetDatosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string InsertTransaction(PruebaConceptoWebService.WsPse.CLSTransaction Transaction, PruebaConceptoWebService.WsPse.CLSTaxPaers TaxPaers) {
            return base.Channel.InsertTransaction(Transaction, TaxPaers);
        }
        
        public System.Threading.Tasks.Task<string> InsertTransactionAsync(PruebaConceptoWebService.WsPse.CLSTransaction Transaction, PruebaConceptoWebService.WsPse.CLSTaxPaers TaxPaers) {
            return base.Channel.InsertTransactionAsync(Transaction, TaxPaers);
        }
        
        public string InsertTransactionJson(string Transaction, string TaxPaers) {
            return base.Channel.InsertTransactionJson(Transaction, TaxPaers);
        }
        
        public System.Threading.Tasks.Task<string> InsertTransactionJsonAsync(string Transaction, string TaxPaers) {
            return base.Channel.InsertTransactionJsonAsync(Transaction, TaxPaers);
        }
        
        public string InsertTransactionMultiCredit(string Transaction, string TaxPaers) {
            return base.Channel.InsertTransactionMultiCredit(Transaction, TaxPaers);
        }
        
        public System.Threading.Tasks.Task<string> InsertTransactionMultiCreditAsync(string Transaction, string TaxPaers) {
            return base.Channel.InsertTransactionMultiCreditAsync(Transaction, TaxPaers);
        }
        
        public string StateTickedID(string TickedID, int IdProcess, string MunicipalityCode) {
            return base.Channel.StateTickedID(TickedID, IdProcess, MunicipalityCode);
        }
        
        public System.Threading.Tasks.Task<string> StateTickedIDAsync(string TickedID, int IdProcess, string MunicipalityCode) {
            return base.Channel.StateTickedIDAsync(TickedID, IdProcess, MunicipalityCode);
        }
        
        public PruebaConceptoWebService.WsPse.TransactionInformation GetTransactionInformation(string TickedID, int IdProcess, string MunicipalityCode) {
            return base.Channel.GetTransactionInformation(TickedID, IdProcess, MunicipalityCode);
        }
        
        public System.Threading.Tasks.Task<PruebaConceptoWebService.WsPse.TransactionInformation> GetTransactionInformationAsync(string TickedID, int IdProcess, string MunicipalityCode) {
            return base.Channel.GetTransactionInformationAsync(TickedID, IdProcess, MunicipalityCode);
        }
    }
}
